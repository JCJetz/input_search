{"ast":null,"code":"var _jsxFileName = \"/Users/jetza/Documents/Frontendmentor_practicas/input_search/src/components/List.js\";\nimport data from \"./ListData.json\";\nimport { React, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction List(props) {\n  //create a new array by filtering the original array\n  const filteredData = data.filter(el => {\n    //if no input the return the original\n    if (props.input === '') {\n      return el;\n    }\n    //return the item which contains the user input\n    else {\n      return el.text.toLowerCase().includes(props.input);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: filteredData.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: item.text\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n}\n_c = List;\nexport default List;\n\n/*\nfunction List(props) {\n    return (\n        <ul>\n            {data.map((item) => (\n                <li key={item.id}>{item.text}</li>\n            ))}\n        </ul>\n    )\n}\n\nexport default List\n*/\nvar _c;\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["data","React","useState","jsxDEV","_jsxDEV","List","props","filteredData","filter","el","input","text","toLowerCase","includes","children","map","item","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jetza/Documents/Frontendmentor_practicas/input_search/src/components/List.js"],"sourcesContent":["import data from \"./ListData.json\"\n\nimport { React, useState } from 'react'\n\nfunction List(props) {\n    //create a new array by filtering the original array\n    const filteredData = data.filter((el) => {\n        //if no input the return the original\n        if (props.input === '') {\n            return el;\n        }\n        //return the item which contains the user input\n        else {\n            return el.text.toLowerCase().includes(props.input)\n        }\n    })\n    return (\n        <ul>\n            {filteredData.map((item) => (\n                <li key={item.id}>{item.text}</li>\n            ))}\n        </ul>\n    )\n}\n\nexport default List\n\n/*\nfunction List(props) {\n    return (\n        <ul>\n            {data.map((item) => (\n                <li key={item.id}>{item.text}</li>\n            ))}\n        </ul>\n    )\n}\n\nexport default List\n*/"],"mappings":";AAAA,OAAOA,IAAI,MAAM,iBAAiB;AAElC,SAASC,KAAK,EAAEC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvC,SAASC,IAAIA,CAACC,KAAK,EAAE;EACjB;EACA,MAAMC,YAAY,GAAGP,IAAI,CAACQ,MAAM,CAAEC,EAAE,IAAK;IACrC;IACA,IAAIH,KAAK,CAACI,KAAK,KAAK,EAAE,EAAE;MACpB,OAAOD,EAAE;IACb;IACA;IAAA,KACK;MACD,OAAOA,EAAE,CAACE,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACP,KAAK,CAACI,KAAK,CAAC;IACtD;EACJ,CAAC,CAAC;EACF,oBACIN,OAAA;IAAAU,QAAA,EACKP,YAAY,CAACQ,GAAG,CAAEC,IAAI,iBACnBZ,OAAA;MAAAU,QAAA,EAAmBE,IAAI,CAACL;IAAI,GAAnBK,IAAI,CAACC,EAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAiB,CACpC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEb;AAACC,EAAA,GAnBQjB,IAAI;AAqBb,eAAeA,IAAI;;AAEnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}